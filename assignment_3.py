# -*- coding: utf-8 -*-
"""Assignment_3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZXkC6m0drhCOHGL_VUbe6n4TgtwTMcDm
"""

print('Q1.A Check for Pallindrome sequence.' + '\n')


def Palindrome():
  '''
  Input: Madam
  output: palindrome
  '''
  word = input('Type a word/string: ')
  word = word.lower()
  if word == word[::-1]:
      print("It's a Palindrome string!")
  else:
      print('Not a Palindrome :/')

Palindrome()


print('\n'+'Q1.B Check whether the input number is a prime number' + '\n')

def CheckIfPrime ():
    a = input("Type in a number, preferably prime number: ")
    a = int(a) 
    b = 2 
    c = ("It is a Prime Number")
    if a == 0 or a == 1:
      print('Not a Prime Number')
    while b < a:
        if a%b == 0:
            c = ("Not a Prime Number")
        b += 1
    print(c)

CheckIfPrime ()

print('Q2.A Create a 3x3 random numbers matrix using NumPy' + '\n')

import numpy as np  
import random 
a = np.random.rand(3,3)*100  
a = np.trunc(a)
print(a)

print('\n'+'Q2.B Max value in the matrix' + '\n')
print(np.max(a))

print('\n'+'Q2.C Normalize the matrix' + '\n')
amax, amin = a.max(), a.min()
a = (a - amin)/(amax - amin)
print(a)

print('Q3.A Read Pandas Df' + '\n')

import pandas as pd

file1 = pd.read_csv('file1.txt', sep="\t")
file2 = pd.read_csv('file2.txt', sep="\t")


print('Q3.B Merge dfs by gene name')

merged_file = pd.merge(file1, file2, on='Gene_name')
print('Merged File:' + '\n')
print(merged_file)


print('\n' + 'Q3.C Mean of each sample and sample/per gene')

samples = ['Sample1', 'Sample2']
print('\n' + 'Mean of each Sample:'+ '\n')
print(merged_file[samples].mean())

merged_file['Mean_Sample'] = merged_file.mean(axis=1)

print('\n'+ 'Merged File with Mean Sample per Gene:' )
print(merged_file)

print('\n' + 'Q3.D Distribution of both Sample data using Boxplot')
boxplot = merged_file.boxplot(column=['Sample1', 'Sample2'], figsize=(10,10))

def remove_outlier(df_in, col_name1, col_name2):
  columns = [col_name1,col_name2]
  for i in columns:
    q1 = df_in[i].quantile(0.25)
    q3 = df_in[i].quantile(0.75)
    iqr = q3-q1 #Interquartile range
    fence_low  = q1-1.5*iqr
    fence_high = q3+1.5*iqr
    df_out = df_in.loc[(df_in[i] > fence_low) & (df_in[i] < fence_high)]
  return df_out.boxplot(column=[col_name1, col_name2],figsize=(10,10))
  
print(remove_outlier(merged_file, 'Sample1', 'Sample2'))